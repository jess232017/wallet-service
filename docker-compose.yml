# Main application service - NestJS API
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASS=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-wallet_db}
      - DB_SYNC=${DB_SYNC:-true}
      - DB_LOGGING=${DB_LOGGING:-true}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wallet-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/api/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database with performance tuning
  postgres:
    image: postgres:16-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-wallet_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wallet-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-wallet_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=100'
      - '-c'
      - 'shared_buffers=256MB'
      - '-c'
      - 'work_mem=4MB'

# Persistent storage for database
volumes:
  postgres_data:
    driver: local

# Network configuration for service communication
networks:
  wallet-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
